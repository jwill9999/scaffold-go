package generator

import (
	"os"
	"path/filepath"
)

// TestProjectData holds the standard test project configuration
var TestProjectData = map[string]interface{}{
	"ProjectName":   "testapi",
	"Module":        "github.com/example/testapi",
	"Description":   "Test API generated by scaffolding tool",
	"Author":        "Test User",
	"Database":      "postgres",
	"Auth":          "jwt",
	"UseCache":      true,
	"CacheProvider": "redis",
	"UseMetrics":    true,
	"UseTracing":    true,
	"ApiVersion":    "v1",
}

// CreateTempTestDir creates a temporary directory for testing and returns its path
// The caller is responsible for cleaning up by calling os.RemoveAll
func CreateTempTestDir() (string, error) {
	tempDir, err := os.MkdirTemp("", "scaffold-test-")
	if err != nil {
		return "", err
	}
	return tempDir, nil
}

// CreateTempTestFile creates a temporary file with the given content for testing
func CreateTempTestFile(dir, name, content string) (string, error) {
	path := filepath.Join(dir, name)
	err := os.WriteFile(path, []byte(content), 0644)
	if err != nil {
		return "", err
	}
	return path, nil
}

// SetupTestTemplate creates a test template in a temporary directory
func SetupTestTemplate(content string) (tempDir string, templatePath string, err error) {
	tempDir, err = CreateTempTestDir()
	if err != nil {
		return "", "", err
	}

	templatePath, err = CreateTempTestFile(tempDir, "test.tmpl", content)
	if err != nil {
		os.RemoveAll(tempDir)
		return "", "", err
	}

	return tempDir, templatePath, nil
}
