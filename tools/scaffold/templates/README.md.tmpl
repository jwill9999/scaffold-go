# {{.Name}}

{{.Description}}

## Features

- Clean architecture with layered design (Handler → Service → Repository)
- GORM for database operations with PostgreSQL
- Gin web framework for routing and middleware
- JWT authentication
- Structured logging with Zap
- Prometheus metrics
- OpenAPI/Swagger documentation
- Containerization with Docker
- Automated testing with testcontainers
- Database migrations
- Configuration management with Viper
- CI/CD with GitHub Actions

## Prerequisites

- Go 1.21 or later
- Docker and Docker Compose
- PostgreSQL 13 or later
- Make (optional, for using Makefile commands)

## Getting Started

1. Clone the repository:
   ```bash
   git clone {{.Repository}}
   cd {{.Name}}
   ```

2. Copy the example environment file:
   ```bash
   cp .env.example .env
   ```

3. Start the development environment:
   ```bash
   make up
   ```

4. Run the migrations:
   ```bash
   make migrate
   ```

5. Start the application:
   ```bash
   make run
   ```

The API will be available at `http://localhost:8080`.

## Project Structure

```
.
├── cmd/                  # Application entrypoints
│   └── api/             # API server
├── internal/            # Private application code
│   ├── config/         # Configuration
│   ├── handler/        # HTTP handlers
│   ├── middleware/     # HTTP middleware
│   ├── models/         # Database models
│   ├── repository/     # Data access layer
│   └── service/        # Business logic
├── migrations/         # Database migrations
├── pkg/               # Public libraries
│   ├── logger/        # Logging package
│   └── metrics/       # Metrics package
├── scripts/           # Build and deployment scripts
├── test/             # Test helpers and fixtures
└── web/              # Web assets and templates
```

## Development

### Running Tests

Run all tests:
```bash
make test
```

Run tests with coverage:
```bash
make test-coverage
```

### Database Migrations

Create a new migration:
```bash
make migrate-create name=add_users_table
```

Run migrations:
```bash
make migrate-up
```

Rollback migrations:
```bash
make migrate-down
```

### API Documentation

The API documentation is available at `http://localhost:8080/swagger/index.html` when running in development mode.

To regenerate the Swagger documentation:
```bash
make swagger
```

## Deployment

### Docker

Build the Docker image:
```bash
make docker-build
```

Run the container:
```bash
make docker-run
```

### Production Deployment

1. Update the configuration in `config/production.yaml`
2. Build the production image:
   ```bash
   make docker-build ENV=production
   ```
3. Deploy using Docker Compose:
   ```bash
   make docker-deploy ENV=production
   ```

## Configuration

Configuration is loaded from:
1. `config/config.yaml` (default)
2. `config/{env}.yaml` (environment specific)
3. Environment variables (override)

Environment variables use the prefix `APP_` and underscores for nesting:
- `APP_SERVER_PORT=8080`
- `APP_DATABASE_HOST=localhost`

## Contributing

1. Fork the repository
2. Create a feature branch
3. Commit your changes
4. Push to the branch
5. Create a Pull Request

Please read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct and development process.

## License

This project is licensed under the {{.License}} - see the [LICENSE](LICENSE) file for details. 