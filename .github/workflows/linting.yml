name: Linting

on:
  push:
    branches: ["develop", "main"]
  pull_request:
    branches: ["develop", "main"]
  workflow_call:
    inputs:
      go-version:
        required: false
        type: string
        default: "1.22"

permissions:
  contents: read

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ inputs.go-version || '1.22' }}
          cache: true

      - name: Install golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          args: --timeout=5m

      - name: Run golangci-lint
        run: golangci-lint run --no-config --timeout=5m ./...

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ inputs.go-version || '1.22' }}
          cache: true

      - name: Install goimports
        run: go install golang.org/x/tools/cmd/goimports@latest

      - name: Check gofmt formatting
        run: |
          if [ "$(gofmt -l . | wc -l)" -gt 0 ]; then
            echo "The following files are not formatted properly with gofmt:"
            gofmt -l .
            exit 1
          fi
          echo "✅ gofmt check passed"

      - name: Check goimports formatting
        run: |
          GOIMPORTS_OUTPUT=$(goimports -l .)
          if [ -n "$GOIMPORTS_OUTPUT" ]; then
            echo "The following files need import formatting with goimports:"
            echo "$GOIMPORTS_OUTPUT"
            echo "Run 'goimports -w .' to fix these issues"
            exit 1
          fi
          echo "✅ goimports check passed"
