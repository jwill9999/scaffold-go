name: Testing

on:
  push:
    branches: ["develop", "main"]
  pull_request:
    branches: ["develop", "main"]
  workflow_call:
    inputs:
      go-version:
        required: false
        type: string
        default: "1.22"

permissions:
  contents: read

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ inputs.go-version || '1.22' }}
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Run tests with coverage
        run: npm run test:ci
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb

      - name: Generate HTML coverage report
        run: npm run test:html

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./test-output/cover.out
          fail_ci_if_error: false

      - name: Upload HTML coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: test-output/coverage.html

      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test-output/test-report.json

      - name: Upload all test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: all-test-artifacts
          path: test-output/
          if-no-files-found: warn
