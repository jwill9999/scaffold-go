package main

import (
	"log"
	"net/http"
	"os"
	"os/signal"
	"syscall"

	"{{ .ModulePath }}/internal/config"
	"{{ .ModulePath }}/internal/core/server"
	"{{ .ModulePath }}/pkg/logger"
)

func main() {
	// Initialize logger
	log := logger.New(true)
	log.Info("Starting {{ .ProjectName }} service...")

	// Load configuration
	cfg, err := config.Load()
	if err != nil {
		log.Error("Failed to load configuration: %v", err)
		os.Exit(1)
	}

	// Initialize server
	srv := server.New(cfg, log)

	// Start server
	go func() {
		if err := srv.Start(); err != nil && err != http.ErrServerClosed {
			log.Error("Server failed: %v", err)
			os.Exit(1)
		}
	}()

	// Wait for interrupt signal
	quit := make(chan os.Signal, 1)
	signal.Notify(quit, syscall.SIGINT, syscall.SIGTERM)
	<-quit

	// Shutdown server
	log.Info("Shutting down server...")
	if err := srv.Shutdown(); err != nil {
		log.Error("Server shutdown failed: %v", err)
	}
} 